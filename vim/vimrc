" By yongcong.wang @ 2019-12-05
"

" => General
set history=5000 " count of history lines

filetype plugin on " enable filetype plugins
filetype indent on

set autoread " auto reload if a file changed outside
au FocusGained,BufEnter * checktime

" set so=7 " roll the screen at [so] num lines from bottom

set wildignore=*.o,*~,*.pyc,*/.git/*,*/.vscode/* " ignore files

set ruler " show current position

set cmdheight=1 " command bar height

set backspace=eol,start,indent " backspace act like an editor
set whichwrap+=<,>,h,l

set smartcase " smart

set hlsearch " hl search result

set showmatch " show matching brackets for 2s
set mat=2

set noequalalways " not resize window after new window created

set noerrorbells " no error bells
set novisualbell
set vb t_vb=
set tm=500

set nobackup " no backup
set nowb
set swapfile

" finding files
"set path+=** " search into subfolders & provide tab-completion
"set wildmenu " display all matching files when tab complete

" tag jump
command! MakeTags !ctags -f .tags -R .
set tags=./.tags,**5/.tags,.tags;~
"                          ^ in working dir, or parents until home
"                   ^ in any subfolder of working dir, depth is 5
"           ^ sibling of open file
set tags+=/usr/include/c++/8/tags  " cpp library

" highlight spaces at the end of line
highlight WhiteSpaceEOL ctermbg=darkgreen guibg=lightgreen
match WhiteSpaceEOL /\s$/
autocmd WinEnter * match WhiteSpaceEOL /\s$/

" file browsing
" let g:netrw_banner=0 " disable banner
" let g:netrw_browse_split=4 " open in prior window
" let g:netrw_altv=1 " open split to the right
" let g:netrw_liststyle=3 " tree view
" let g:netrw_winsize=25 " 25% of current window
" let g:netrw_list_hide=netrw_gitignore#Hide() " ignore files in gitignore
" let g:netrw_list_hide.=',\(^\|\s\s\)\zs\.\S\+' " hide some folder
" hide files/folders in file browser
let g:netrw_list_hide= '.*\.swp$,.*\.pyc$,.*\.git\/$'

" => Color

syntax enable "highlight syntax

colorscheme code " colorscheme

set background=light

set colorcolumn=100 " color at 100

set ambiwidth=double " support chinese

set mouse=a " use mouse in all mode, a for all mode

set noundofile " no undo file

set clipboard=unnamedplus,unnamed " share clipboard with os

" => Text
set encoding=utf8 " encode

set ffs=unix,dos,mac " unix as format

set expandtab " use space instead of tabs
set smarttab

set shiftwidth=2 " 1 tab = 2 spaces
set tabstop=2

set ai " auto indent
set si " smart indent
set wrap " wrap lines

" set lbr " line break on 80 chars
" set tw=80

" set nu " show line num

set foldenable " no fold code
set laststatus=2
set statusline=%F
set statusline+=%=
" set statusline+=%{getcwd()}

set foldlevel=9999

" highlight files
au BufRead,BufNewFile *.launch set filetype=xml
au BufRead,BufNewFile *.dag set filetype=python
au BufRead,BufNewFile *.pb.txt set filetype=proto
au BufRead,BufNewFile *.ii set filetype=cpp

" when you press *, just highlight and stay still
nnoremap * :keepjumps normal! mi*`i<CR>

" fold
set foldmethod=indent " use fold indent
let g:markdown_folding=1 " markdown zoom

" => Functions

" shell header
function AddTemplate_sh()
	let infor = "#!/bin/bash\n"
	\."# By yongcong.wang @ ".strftime("%d/%m/%Y")."\n"
	silent put! = infor
endfunction
autocmd BufNewFile *.sh call AddTemplate_sh()

" python header
function AddTemplate_py()
	let infor = "#!/usr/bin/env python3\n"
	\."# -*- coding: utf-8 -*-\n"
	\."# By yongcong.wang @ ".strftime("%d/%m/%Y")."\n"
	silent put! = infor
endfunction
autocmd BufNewFile *.py call AddTemplate_py()

autocmd BufWritePost $MYVIMRC source $MYVIMRC " auto reload config
" hilight tailing space
"highlight ExtraWhitespace ctermbg=red guibg=red
"match ExtraWhitespace /\s\+$/
"
set clipboard=exclude:.*
set shell=/bin/bash

set rtp+=~/.fzf
